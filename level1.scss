$gap:4vh;
$padding : 4vh;
$color: #48CAE4;

//variable map
$bp : (
    mobile: 500px,
    tablet : 768px,
    desktop : 1440px
);

@mixin query($screen){
    @each $key, $value in $bp {
        @if($screen == $key){
            @media (max-width: $value){
                @content;
            }
        }
    }
}

*{
    margin: 0px;
    padding: 0px;
    box-sizing: border-box;
    body{
        font-family: sans-serif;
        font-size: 45px;
        width: 100%;
        min-height: 100vh;
    }
}

.container{
    display: flex;
    flex-direction: column;
    gap:$gap;
    padding: $padding;
    border: 1vh solid $color;
}


[class ^="block-"]{
   //border : 3px solid $color;
   display: flex;
   flex-direction: row;
   height: (100vh - 2vh -$gap*2 - $padding*2)/3;
   gap:$gap;
   @include query (mobile){
       flex-direction: column;
       height: 500px;
   }
}

[class ^="box-"]{
    display: flex;
    align-items: center;
    justify-content: center;
    //flex-grow worked on the available space
    flex-basis: (100%)/3;
    background-color: #c1c1c1;
    border: 2px solid black;
    border-radius: 10px;
}