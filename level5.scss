$gap:4vh;
$padding : 4vh;
$color: #48CAE4;
//variable map
$bp : (
    mobile: 500px,
    tablet : 768px,
    desktop : 1440px
);

@mixin query($screen){
    @each $key, $value in $bp {
        @if($screen == $key){
            @media (max-width: $value){
                @content;
            }
        }
    }
}
*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    body{
        font-family: sans-serif;
        font-size: 35px;
        width: 100%;
        min-height: 100vh;
    }
}


.container{
    display: flex;
    flex-direction: column;
    gap: $gap;
    padding: $padding;
}

[class ^="block-"]{
    display: flex;
    flex-direction: row;
    gap: $gap;
  }
// Style rules of all .box-*

[class ^="box-"]{
    display: flex;
    justify-content: center;
    align-items: center;
    border : 1vh solid $color;
    border-radius: 10px;
  }
// Defining A & E Together
.box-1,.box-5{
    flex-basis: 100%;
    height: 20vh;
  }
  
  // Defining C here
  .box-3{
    flex-basis: 60%;
  //   Removing Gap & padding
    height: 60vh -$gap*2-$padding*2;
  }
  
  // Defining B & D Together
  .box-2,.box-4{
    flex-basis: 20%;
  }
// Media query for mobile Screen

@include query(mobile){
    .block-2{
      flex-direction: column;
      height: 60vh;
    }
  // Hiding our B block
    .box-2{
      display: none;
    }
  // Increasing Height of C  
    .box-3{
      flex-basis: 80%;
    }
  }